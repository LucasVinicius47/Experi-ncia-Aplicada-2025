# auth_app.py

import streamlit as st
# Importa as fun√ß√µes de comunica√ß√£o com o Firebase do seu outro arquivo
from firebase_utils import register_user, login_user, send_password_reset

def render_login_form():
    """Desenha o formul√°rio de login no centro da tela principal."""
    st.header("üîë Login")
    
    # 1. Centraliza o formul√°rio na tela
    col_vazio1, col_form, col_vazio2 = st.columns([1, 1, 1])
    
    with col_form:
        # 2. Formul√°rio de Login
        with st.form("login_form"):
            email = st.text_input("Email", key="login_email")
            password = st.text_input("Senha", type="password", key="login_password")
            submitted = st.form_submit_button("Entrar")
    
            if submitted:
                success, token_or_message = login_user(email, password)
                if success:
                    # Se o login for OK, define as vari√°veis de sess√£o e recarrega o app
                    st.session_state['logged_in'] = True
                    st.session_state['user_email'] = email
                    st.session_state['id_token'] = token_or_message
                    st.success("Login realizado com sucesso!")
                    # CORRIGIDO: Usando o novo m√©todo st.rerun()
                    st.rerun() 
                else:
                    st.error(token_or_message)
        
        # 3. Bot√£o para Esqueci a Senha
        st.button("Esqueci a senha", 
                  on_click=lambda: st.session_state.update({'mode': 'reset'}), 
                  key="forgot_password_btn")
        
        # 4. Bot√£o para Cadastro (Navega√ß√£o)
        st.button("N√£o tem conta? Cadastre-se", 
                  on_click=lambda: st.session_state.update({'mode': 'signup'}), 
                  key="nav_to_signup_btn")


def render_signup_form():
    """Desenha o formul√°rio de cadastro no centro da tela."""
    st.header("‚úçÔ∏è Cadastro (Sign Up)")
    col_vazio1, col_form, col_vazio2 = st.columns([1, 1, 1])
    
    with col_form:
        with st.form("signup_form"):
            st.subheader("Cadastre-se para acessar o Dash Gol")
            email = st.text_input("Email", key="signup_email")
            password = st.text_input("Nova Senha (min. 6 caracteres)", type="password", key="signup_password")
            submitted = st.form_submit_button("Cadastrar")

            if submitted:
                success, message = register_user(email, password)
                if success:
                    st.success(message)
                    # Redireciona para a tela de login ap√≥s um cadastro bem-sucedido
                    st.session_state['mode'] = 'login' 
                    # CORRIGIDO: Usando o novo m√©todo st.rerun()
                    st.rerun() 
                else:
                    st.error(message)

        # Bot√£o para Login (Navega√ß√£o)
        st.button("J√° tem conta? Fazer Login", 
                  on_click=lambda: st.session_state.update({'mode': 'login'}), 
                  key="back_to_login_from_signup")


def render_reset_password():
    """Desenha o formul√°rio de recupera√ß√£o de senha no centro da tela."""
    st.header("‚ùì Recuperar Senha")
    col_vazio1, col_form, col_vazio2 = st.columns([1, 1, 1])
    
    with col_form:
        with st.form("reset_form"):
            st.subheader("Insira seu email para receber o link de recupera√ß√£o.")
            email = st.text_input("Email de Recupera√ß√£o", key="reset_email")
            submitted = st.form_submit_button("Enviar Link")
            
            if submitted:
                success, message = send_password_reset(email)
                if success:
                    st.info(message)
                else:
                    st.warning(message)
        
        # Bot√£o para voltar ao login
        st.button("Voltar ao Login", 
                  on_click=lambda: st.session_state.update({'mode': 'login'}), 
                  key="back_to_login_btn")


def require_login_and_render_ui():
    """Fun√ß√£o principal de controle de acesso e renderiza√ß√£o da interface."""
    
    # Inicializa o estado de sess√£o se ainda n√£o existir
    if 'logged_in' not in st.session_state:
        st.session_state['logged_in'] = False
    if 'mode' not in st.session_state:
        st.session_state['mode'] = 'login' 
        
    if st.session_state['logged_in']:
        # Usu√°rio logado: Retorna True para liberar o dashboard no app.py
        return True
    else:
        # Usu√°rio n√£o logado: Renderiza a UI de autentica√ß√£o
        
        # AVISO CENTRALIZADO
        st.warning("üîí Por favor, fa√ßa login ou cadastre-se para acessar o Dash Gol.")
        
        # Desenha o formul√°rio principal com base no modo
        if st.session_state['mode'] == 'login':
            render_login_form()
            
        elif st.session_state['mode'] == 'signup':
            render_signup_form()
            
        elif st.session_state['mode'] == 'reset':
            render_reset_password()
            
        st.stop() # Bloqueia a execu√ß√£o do dashboard no app.py